name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: tests (stable • ${{ matrix.os }} • features=${{ matrix.features || 'default' }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        features: ["", "engine-mock"] # run both default and mocked engine

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo builds
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .

      - name: Show toolchain
        run: rustc -Vv && cargo -V

      - name: Set hermetic cache dir (Linux/macOS)
        if: runner.os != 'Windows'
        run: echo "XDG_CACHE_HOME=$RUNNER_TEMP/xdg-cache" >> $GITHUB_ENV

      - name: Set hermetic cache dir (Windows)
        if: runner.os == 'Windows'
        run: echo "XDG_CACHE_HOME=$env:RUNNER_TEMP\\xdg-cache" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Build
        run: cargo build --all --features "${{ matrix.features }}"

      - name: Test
        shell: bash
        run: |
          if [ -z "${{ matrix.features }}" ]; then
            cargo test --all
          else
            cargo test --all --features "${{ matrix.features }}"
          fi
